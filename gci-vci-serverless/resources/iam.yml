# This file describes AWS Resources and is specifically written in a way to be included in
# a serverless.yml file. By itself it is not a valid CloudFormation template.

Resources:

  ServerlessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
      Policies:
      - PolicyName: clingenpolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: "Allow"
              Action:
                - lambda:InvokeFunction
              Resource: !Join
                - ""
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':lambda:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':function:'
                  - ${self:service}-${self:provider.stage}-gci-vci-serverless:*

            - Effect: "Allow"
              Action:
                - 'es:*'
              Resource:
                - '*'

            - Effect: "Allow"
              Action:
                - dynamodb:DescribeTable
                - dynamodb:BatchGetItem
                - dynamodb:Query
                # - dynamodb:Scan (EL 2020-04-08: Scan is a source of perf issues. Disable by default)
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource:
                - !GetAtt ClinGenTable.Arn
                - !GetAtt ClinGenVPTTable.Arn
                - !GetAtt ClinGenVPFTable.Arn
            - Effect: "Allow"
              Action:
                - dynamodb:Query
              Resource:
                - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenTable', 'Arn'], 'index', 'item_type_index' ] ]
                # - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenVPTTable', 'Arn'], 'index', 'item_type_index' ] ]
                # - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenVPTTable', 'Arn'], 'index', 'hgnc_type_index' ] ]
                - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenVPTTable', 'Arn'], 'index', 'hgnc_group_index' ] ]
                - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenVPFTable', 'Arn'], 'index', 'item_type_index' ] ]
                - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenVPFTable', 'Arn'], 'index', 'DbSavesEmailGSI' ] ]
                - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenVPFTable', 'Arn'], 'index', 'DbSavesAffiliationGSI' ] ]            
            - Effect: "Allow"
              Action:
                - dynamodb:Query
              Resource:
                - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenTable', 'Arn'], 'index', 'carId_index' ] ]
                - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenVPTTable', 'Arn'], 'index', 'carId_index' ] ]
            - Effect: "Allow"
              Action:
                - dynamodb:Query
              Resource:
                - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenTable', 'Arn'], 'index', 'clinvarVariantId_index' ] ]
            - Effect: "Allow"
              Action:
                - dynamodb:Query
              Resource:
                - !GetAtt ClinGenTableHistory.Arn
            - Effect: "Allow"
              Action:
                - dynamodb:Query
              Resource:
                - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenTable', 'Arn'], 'index', 'affiliation_index' ] ]            
            - Effect: "Allow"
              Action:
                - logs:CreateLogGroup
              Resource: !Join
                - ""
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':logs:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':log-group:'
                  - /aws/lambda/${self:service}-${self:provider.stage}-gci-vci-serverless
            - Effect: "Allow"
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !Join
                - ""
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':logs:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':log-group:'
                  - /aws/lambda/${self:service}-${self:provider.stage}-gci-vci-serverless:*
            - Effect: "Allow"
              Action: 
                - s3:PutObject
                - s3:PutObjectAcl
                - s3:PutObjectTagging
                - s3:PutObjectVersionAcl
                - s3:PutObjectVersionTagging
                - s3:GetObject
              Resource: 
                - !GetAtt ApprovedBucket.Arn
                - !GetAtt ProvisionalBucket.Arn 
                - !GetAtt SnapshotBucket.Arn
                - !GetAtt VpBucket.Arn
                - !Join [ '/', [ !GetAtt ApprovedBucket.Arn, '*' ] ]
                - !Join [ '/', [ !GetAtt ProvisionalBucket.Arn, '*' ] ]
                - !Join [ '/', [ !GetAtt SnapshotBucket.Arn, '*' ] ]
                - !Join [ '/', [ !GetAtt VpBucket.Arn, '*' ] ]
  ClinGenTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
      Policies:
      - PolicyName: clingenhistory
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - dynamodb:BatchWriteItem
              Resource:
                - !GetAtt ClinGenTableHistory.Arn
            - Effect: "Allow"
              Action:
                - dynamodb:GetRecords
                - dynamodb:GetShardIterator
                - dynamodb:DescribeStream
                - dynamodb:ListStreams
              Resource:
                - !GetAtt ClinGenTable.StreamArn
            - Effect: "Allow"
              Action:
                - logs:CreateLogGroup
              Resource: !Join
                - ""
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':logs:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':log-group:'
                  - /aws/lambda/${self:service}-${self:provider.stage}-gci-vci-history-trigger
            - Effect: "Allow"
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !Join
                - ""
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':logs:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':log-group:'
                  - /aws/lambda/${self:service}-${self:provider.stage}-gci-vci-history-trigger:*

  PostConfirmationTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: post-confirmation-trigger-policy-${self:provider.stage}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt ClinGenTable.Arn
              - Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                Resource: !Join
                  - ""
                  - - 'arn:'
                    - !Ref 'AWS::Partition'
                    - ':logs:'
                    - !Ref 'AWS::Region'
                    - ':'
                    - !Ref 'AWS::AccountId'
                    - ':log-group:'
                    - /aws/lambda/${self:service}-${self:provider.stage}-gci-vci-post-confirmation-trigger
              - Effect: "Allow"
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Join
                  - ""
                  - - 'arn:'
                    - !Ref 'AWS::Partition'
                    - ':logs:'
                    - !Ref 'AWS::Region'
                    - ':'
                    - !Ref 'AWS::AccountId'
                    - ':log-group:'
                    - /aws/lambda/${self:service}-${self:provider.stage}-gci-vci-post-confirmation-trigger:*
  # All additional Kafka functions can use this same role as long as they follow the naming convention gci-vci-kafka-*
  KafkaLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: kafka-lambda-policy-${self:provider.stage}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  # - dynamodb:Scan (EL 2020-04-08: Scan is a source of perf issues. Disable by default)
                  - dynamodb:GetItem
                  - dynamodb:DeleteItem
                Resource:
                  - !GetAtt ClinGenVPTTable.Arn
              - Effect: "Allow"
                Action:
                  - dynamodb:Query
                Resource:
                  - 'Fn::Join': [ "/", [ 'Fn::GetAtt': [ 'ClinGenVPTTable', 'Arn'], 'index', 'carId_index' ] ]
              - Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                Resource: !Join
                  - ""
                  - - 'arn:'
                    - !Ref 'AWS::Partition'
                    - ':logs:'
                    - !Ref 'AWS::Region'
                    - ':'
                    - !Ref 'AWS::AccountId'
                    - ':log-group:'
                    - /aws/lambda/${self:service}-${self:provider.stage}-gci-vci-kafka-*
              - Effect: "Allow"
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Join
                  - ""
                  - - 'arn:'
                    - !Ref 'AWS::Partition'
                    - ':logs:'
                    - !Ref 'AWS::Region'
                    - ':'
                    - !Ref 'AWS::AccountId'
                    - ':log-group:'
                    - /aws/lambda/${self:service}-${self:provider.stage}-gci-vci-kafka-*:*

  ClinGenVPCountTriggerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
      Policies:
      - PolicyName: DynamoTablesAccess
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - dynamodb:DescribeTable
                - dynamodb:BatchGetItem
                - dynamodb:Query
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
              Resource: !Join
                - ""
                - - !GetAtt ClinGenVPTTable.Arn
                  - "*"
            - Effect: "Allow"
              Action:                
                - dynamodb:DescribeTable
                - dynamodb:Get*
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:BatchGet*
              Resource:
                - !GetAtt ClinGenTable.Arn
            - Effect: "Allow"
              Action:
                - dynamodb:GetRecords
                - dynamodb:GetShardIterator
                - dynamodb:DescribeStream
                - dynamodb:ListStreams
              Resource:
                - !GetAtt ClinGenTable.StreamArn
            - Effect: "Allow"
              Action:
                - logs:CreateLogGroup
              Resource: !Join
                - ""
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':logs:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':log-group:'
                  - /aws/lambda/${self:service}-${self:provider.stage}-gci-vci-vp-count-trigger
            - Effect: "Allow"
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !Join
                - ""
                - - 'arn:'
                  - !Ref 'AWS::Partition'
                  - ':logs:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':log-group:'
                  - /aws/lambda/${self:service}-${self:provider.stage}-gci-vci-vp-count-trigger:*
